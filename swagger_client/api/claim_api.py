# coding: utf-8

"""
    Transaction Management Bus (TMB) API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: V3.2.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import re  # noqa: F401

# python 2 and python 3 compatibility library
import six

from swagger_client.api_client import ApiClient


class ClaimApi(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    Ref: https://github.com/swagger-api/swagger-codegen
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

    def api_claim_post_submission_post(self, **kwargs):  # noqa: E501
        """Upload submission transaction  # noqa: E501

        Upload submission transaction.            <br /><b class=\"ExampleColor\">C# Integration Example: </b>                          HttpClient client = new HttpClient { BaseAddress = new Uri(\"http://TPO_URL/api/\") };             client.DefaultRequestHeaders.Accept.Clear();             client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue(\"application/json\"));             client.DefaultRequestHeaders.Add(\"Username\", \"User\");             client.DefaultRequestHeaders.Add(\"Password\", \"Pass\");             SubmissionParameter pr = new SubmissionParameter() { ...... };             HttpResponseMessage response = await client.PostAsJsonAsync(\"Claim/PostSubmission\", pr);             // Cast the response content to your object using the method response.Content.ReadAsAsync  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.api_claim_post_submission_post(async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param TpoDataDTOsControllerParametersSubmissionParameter body: The submission object
        :param str username: username case sensitive
        :param str password: password case sensitive
        :param str language: 'en' for English(default), 'ar' for Arabic
        :return: TpoSharedEntitiesResult
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.api_claim_post_submission_post_with_http_info(**kwargs)  # noqa: E501
        else:
            (data) = self.api_claim_post_submission_post_with_http_info(**kwargs)  # noqa: E501
            return data

    def api_claim_post_submission_post_with_http_info(self, **kwargs):  # noqa: E501
        """Upload submission transaction  # noqa: E501

        Upload submission transaction.            <br /><b class=\"ExampleColor\">C# Integration Example: </b>                          HttpClient client = new HttpClient { BaseAddress = new Uri(\"http://TPO_URL/api/\") };             client.DefaultRequestHeaders.Accept.Clear();             client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue(\"application/json\"));             client.DefaultRequestHeaders.Add(\"Username\", \"User\");             client.DefaultRequestHeaders.Add(\"Password\", \"Pass\");             SubmissionParameter pr = new SubmissionParameter() { ...... };             HttpResponseMessage response = await client.PostAsJsonAsync(\"Claim/PostSubmission\", pr);             // Cast the response content to your object using the method response.Content.ReadAsAsync  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.api_claim_post_submission_post_with_http_info(async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param TpoDataDTOsControllerParametersSubmissionParameter body: The submission object
        :param str username: username case sensitive
        :param str password: password case sensitive
        :param str language: 'en' for English(default), 'ar' for Arabic
        :return: TpoSharedEntitiesResult
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body', 'username', 'password', 'language']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method api_claim_post_submission_post" % key
                )
            params[key] = val
        del params['kwargs']

        collection_formats = {}

        path_params = {}

        query_params = []

        header_params = {}
        if 'username' in params:
            header_params['username'] = params['username']  # noqa: E501
        if 'password' in params:
            header_params['password'] = params['password']  # noqa: E501
        if 'language' in params:
            header_params['language'] = params['language']  # noqa: E501

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['text/plain', 'application/json', 'text/json'])  # noqa: E501

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
            ['application/json-patch+json', 'application/json', 'text/json', 'application/*+json'])  # noqa: E501

        # Authentication setting
        auth_settings = ['Bearer']  # noqa: E501

        return self.api_client.call_api(
            '/api/Claim/PostSubmission', 'POST',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='TpoSharedEntitiesResult',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

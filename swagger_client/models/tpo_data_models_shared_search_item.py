# coding: utf-8

"""
    Transaction Management Bus (TMB) API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: V3.2.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class TpoDataModelsSharedSearchItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'reference_number': 'str',
        'identity': 'str',
        'id': 'str',
        'sender_id': 'str',
        'receiver_id': 'str',
        'record_count': 'int',
        'transaction_date': 'str',
        'creation_date': 'str',
        'downloaded': 'bool'
    }

    attribute_map = {
        'reference_number': 'ReferenceNumber',
        'identity': 'Identity',
        'id': 'ID',
        'sender_id': 'SenderID',
        'receiver_id': 'ReceiverID',
        'record_count': 'RecordCount',
        'transaction_date': 'TransactionDate',
        'creation_date': 'CreationDate',
        'downloaded': 'Downloaded'
    }

    def __init__(self, reference_number=None, identity=None, id=None, sender_id=None, receiver_id=None,
                 record_count=None, transaction_date=None, creation_date=None, downloaded=None):  # noqa: E501
        """TpoDataModelsSharedSearchItem - a model defined in Swagger"""  # noqa: E501
        self._reference_number = None
        self._identity = None
        self._id = None
        self._sender_id = None
        self._receiver_id = None
        self._record_count = None
        self._transaction_date = None
        self._creation_date = None
        self._downloaded = None
        self.discriminator = None
        if reference_number is not None:
            self.reference_number = reference_number
        if identity is not None:
            self.identity = identity
        if id is not None:
            self.id = id
        if sender_id is not None:
            self.sender_id = sender_id
        if receiver_id is not None:
            self.receiver_id = receiver_id
        if record_count is not None:
            self.record_count = record_count
        if transaction_date is not None:
            self.transaction_date = transaction_date
        if creation_date is not None:
            self.creation_date = creation_date
        if downloaded is not None:
            self.downloaded = downloaded

    @property
    def reference_number(self):
        """Gets the reference_number of this TpoDataModelsSharedSearchItem.  # noqa: E501

        Returned when Posting LabRequest, RadRequest, ERXRequest  # noqa: E501

        :return: The reference_number of this TpoDataModelsSharedSearchItem.  # noqa: E501
        :rtype: str
        """
        return self._reference_number

    @reference_number.setter
    def reference_number(self, reference_number):
        """Sets the reference_number of this TpoDataModelsSharedSearchItem.

        Returned when Posting LabRequest, RadRequest, ERXRequest  # noqa: E501

        :param reference_number: The reference_number of this TpoDataModelsSharedSearchItem.  # noqa: E501
        :type: str
        """

        self._reference_number = reference_number

    @property
    def identity(self):
        """Gets the identity of this TpoDataModelsSharedSearchItem.  # noqa: E501

        Returned when calling FindPharmacyPrescriptions, FindLaboratoryOrder, FindRadiologyOrder  # noqa: E501

        :return: The identity of this TpoDataModelsSharedSearchItem.  # noqa: E501
        :rtype: str
        """
        return self._identity

    @identity.setter
    def identity(self, identity):
        """Sets the identity of this TpoDataModelsSharedSearchItem.

        Returned when calling FindPharmacyPrescriptions, FindLaboratoryOrder, FindRadiologyOrder  # noqa: E501

        :param identity: The identity of this TpoDataModelsSharedSearchItem.  # noqa: E501
        :type: str
        """

        self._identity = identity

    @property
    def id(self):
        """Gets the id of this TpoDataModelsSharedSearchItem.  # noqa: E501

        Gets or sets the identifier.  # noqa: E501

        :return: The id of this TpoDataModelsSharedSearchItem.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TpoDataModelsSharedSearchItem.

        Gets or sets the identifier.  # noqa: E501

        :param id: The id of this TpoDataModelsSharedSearchItem.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def sender_id(self):
        """Gets the sender_id of this TpoDataModelsSharedSearchItem.  # noqa: E501

        Gets or sets the identifier of the sender.  # noqa: E501

        :return: The sender_id of this TpoDataModelsSharedSearchItem.  # noqa: E501
        :rtype: str
        """
        return self._sender_id

    @sender_id.setter
    def sender_id(self, sender_id):
        """Sets the sender_id of this TpoDataModelsSharedSearchItem.

        Gets or sets the identifier of the sender.  # noqa: E501

        :param sender_id: The sender_id of this TpoDataModelsSharedSearchItem.  # noqa: E501
        :type: str
        """

        self._sender_id = sender_id

    @property
    def receiver_id(self):
        """Gets the receiver_id of this TpoDataModelsSharedSearchItem.  # noqa: E501

        Gets or sets the identifier of the receiver.  # noqa: E501

        :return: The receiver_id of this TpoDataModelsSharedSearchItem.  # noqa: E501
        :rtype: str
        """
        return self._receiver_id

    @receiver_id.setter
    def receiver_id(self, receiver_id):
        """Sets the receiver_id of this TpoDataModelsSharedSearchItem.

        Gets or sets the identifier of the receiver.  # noqa: E501

        :param receiver_id: The receiver_id of this TpoDataModelsSharedSearchItem.  # noqa: E501
        :type: str
        """

        self._receiver_id = receiver_id

    @property
    def record_count(self):
        """Gets the record_count of this TpoDataModelsSharedSearchItem.  # noqa: E501

        Gets or sets the number of records.  # noqa: E501

        :return: The record_count of this TpoDataModelsSharedSearchItem.  # noqa: E501
        :rtype: int
        """
        return self._record_count

    @record_count.setter
    def record_count(self, record_count):
        """Sets the record_count of this TpoDataModelsSharedSearchItem.

        Gets or sets the number of records.  # noqa: E501

        :param record_count: The record_count of this TpoDataModelsSharedSearchItem.  # noqa: E501
        :type: int
        """

        self._record_count = record_count

    @property
    def transaction_date(self):
        """Gets the transaction_date of this TpoDataModelsSharedSearchItem.  # noqa: E501

        Gets or sets the transaction date.  # noqa: E501

        :return: The transaction_date of this TpoDataModelsSharedSearchItem.  # noqa: E501
        :rtype: str
        """
        return self._transaction_date

    @transaction_date.setter
    def transaction_date(self, transaction_date):
        """Sets the transaction_date of this TpoDataModelsSharedSearchItem.

        Gets or sets the transaction date.  # noqa: E501

        :param transaction_date: The transaction_date of this TpoDataModelsSharedSearchItem.  # noqa: E501
        :type: str
        """

        self._transaction_date = transaction_date

    @property
    def creation_date(self):
        """Gets the creation_date of this TpoDataModelsSharedSearchItem.  # noqa: E501

        Gets or sets the creation date.  # noqa: E501

        :return: The creation_date of this TpoDataModelsSharedSearchItem.  # noqa: E501
        :rtype: str
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this TpoDataModelsSharedSearchItem.

        Gets or sets the creation date.  # noqa: E501

        :param creation_date: The creation_date of this TpoDataModelsSharedSearchItem.  # noqa: E501
        :type: str
        """

        self._creation_date = creation_date

    @property
    def downloaded(self):
        """Gets the downloaded of this TpoDataModelsSharedSearchItem.  # noqa: E501

        Gets or sets a value indicating whether the downloaded.  # noqa: E501

        :return: The downloaded of this TpoDataModelsSharedSearchItem.  # noqa: E501
        :rtype: bool
        """
        return self._downloaded

    @downloaded.setter
    def downloaded(self, downloaded):
        """Sets the downloaded of this TpoDataModelsSharedSearchItem.

        Gets or sets a value indicating whether the downloaded.  # noqa: E501

        :param downloaded: The downloaded of this TpoDataModelsSharedSearchItem.  # noqa: E501
        :type: bool
        """

        self._downloaded = downloaded

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(TpoDataModelsSharedSearchItem, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, TpoDataModelsSharedSearchItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

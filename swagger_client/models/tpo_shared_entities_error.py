# coding: utf-8

"""
    Transaction Management Bus (TMB) API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: V3.2.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class TpoSharedEntitiesError(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'additional_reference': 'str',
        'additional_reference_object_name': 'str',
        'reference': 'str',
        'reference_object_name': 'str',
        'property_name': 'str',
        'property_value': 'object',
        'rule_code': 'str',
        'error_text': 'str',
        'object_name': 'str',
        'transaction': 'str',
        'activity_code': 'str'
    }

    attribute_map = {
        'additional_reference': 'AdditionalReference',
        'additional_reference_object_name': 'AdditionalReferenceObjectName',
        'reference': 'Reference',
        'reference_object_name': 'ReferenceObjectName',
        'property_name': 'PropertyName',
        'property_value': 'PropertyValue',
        'rule_code': 'RuleCode',
        'error_text': 'ErrorText',
        'object_name': 'ObjectName',
        'transaction': 'Transaction',
        'activity_code': 'ActivityCode'
    }

    def __init__(self, additional_reference=None, additional_reference_object_name=None, reference=None,
                 reference_object_name=None, property_name=None, property_value=None, rule_code=None, error_text=None,
                 object_name=None, transaction=None, activity_code=None):  # noqa: E501
        """TpoSharedEntitiesError - a model defined in Swagger"""  # noqa: E501
        self._additional_reference = None
        self._additional_reference_object_name = None
        self._reference = None
        self._reference_object_name = None
        self._property_name = None
        self._property_value = None
        self._rule_code = None
        self._error_text = None
        self._object_name = None
        self._transaction = None
        self._activity_code = None
        self.discriminator = None
        if additional_reference is not None:
            self.additional_reference = additional_reference
        if additional_reference_object_name is not None:
            self.additional_reference_object_name = additional_reference_object_name
        if reference is not None:
            self.reference = reference
        if reference_object_name is not None:
            self.reference_object_name = reference_object_name
        if property_name is not None:
            self.property_name = property_name
        if property_value is not None:
            self.property_value = property_value
        if rule_code is not None:
            self.rule_code = rule_code
        if error_text is not None:
            self.error_text = error_text
        if object_name is not None:
            self.object_name = object_name
        if transaction is not None:
            self.transaction = transaction
        if activity_code is not None:
            self.activity_code = activity_code

    @property
    def additional_reference(self):
        """Gets the additional_reference of this TpoSharedEntitiesError.  # noqa: E501

        Additional reference.  # noqa: E501

        :return: The additional_reference of this TpoSharedEntitiesError.  # noqa: E501
        :rtype: str
        """
        return self._additional_reference

    @additional_reference.setter
    def additional_reference(self, additional_reference):
        """Sets the additional_reference of this TpoSharedEntitiesError.

        Additional reference.  # noqa: E501

        :param additional_reference: The additional_reference of this TpoSharedEntitiesError.  # noqa: E501
        :type: str
        """

        self._additional_reference = additional_reference

    @property
    def additional_reference_object_name(self):
        """Gets the additional_reference_object_name of this TpoSharedEntitiesError.  # noqa: E501

        Additional reference object name.  # noqa: E501

        :return: The additional_reference_object_name of this TpoSharedEntitiesError.  # noqa: E501
        :rtype: str
        """
        return self._additional_reference_object_name

    @additional_reference_object_name.setter
    def additional_reference_object_name(self, additional_reference_object_name):
        """Sets the additional_reference_object_name of this TpoSharedEntitiesError.

        Additional reference object name.  # noqa: E501

        :param additional_reference_object_name: The additional_reference_object_name of this TpoSharedEntitiesError.  # noqa: E501
        :type: str
        """

        self._additional_reference_object_name = additional_reference_object_name

    @property
    def reference(self):
        """Gets the reference of this TpoSharedEntitiesError.  # noqa: E501

        Error reference.  # noqa: E501

        :return: The reference of this TpoSharedEntitiesError.  # noqa: E501
        :rtype: str
        """
        return self._reference

    @reference.setter
    def reference(self, reference):
        """Sets the reference of this TpoSharedEntitiesError.

        Error reference.  # noqa: E501

        :param reference: The reference of this TpoSharedEntitiesError.  # noqa: E501
        :type: str
        """

        self._reference = reference

    @property
    def reference_object_name(self):
        """Gets the reference_object_name of this TpoSharedEntitiesError.  # noqa: E501

        Reference object name.  # noqa: E501

        :return: The reference_object_name of this TpoSharedEntitiesError.  # noqa: E501
        :rtype: str
        """
        return self._reference_object_name

    @reference_object_name.setter
    def reference_object_name(self, reference_object_name):
        """Sets the reference_object_name of this TpoSharedEntitiesError.

        Reference object name.  # noqa: E501

        :param reference_object_name: The reference_object_name of this TpoSharedEntitiesError.  # noqa: E501
        :type: str
        """

        self._reference_object_name = reference_object_name

    @property
    def property_name(self):
        """Gets the property_name of this TpoSharedEntitiesError.  # noqa: E501

        Property Name.  # noqa: E501

        :return: The property_name of this TpoSharedEntitiesError.  # noqa: E501
        :rtype: str
        """
        return self._property_name

    @property_name.setter
    def property_name(self, property_name):
        """Sets the property_name of this TpoSharedEntitiesError.

        Property Name.  # noqa: E501

        :param property_name: The property_name of this TpoSharedEntitiesError.  # noqa: E501
        :type: str
        """

        self._property_name = property_name

    @property
    def property_value(self):
        """Gets the property_value of this TpoSharedEntitiesError.  # noqa: E501

        Property value.  # noqa: E501

        :return: The property_value of this TpoSharedEntitiesError.  # noqa: E501
        :rtype: object
        """
        return self._property_value

    @property_value.setter
    def property_value(self, property_value):
        """Sets the property_value of this TpoSharedEntitiesError.

        Property value.  # noqa: E501

        :param property_value: The property_value of this TpoSharedEntitiesError.  # noqa: E501
        :type: object
        """

        self._property_value = property_value

    @property
    def rule_code(self):
        """Gets the rule_code of this TpoSharedEntitiesError.  # noqa: E501

        Rule code.  # noqa: E501

        :return: The rule_code of this TpoSharedEntitiesError.  # noqa: E501
        :rtype: str
        """
        return self._rule_code

    @rule_code.setter
    def rule_code(self, rule_code):
        """Sets the rule_code of this TpoSharedEntitiesError.

        Rule code.  # noqa: E501

        :param rule_code: The rule_code of this TpoSharedEntitiesError.  # noqa: E501
        :type: str
        """

        self._rule_code = rule_code

    @property
    def error_text(self):
        """Gets the error_text of this TpoSharedEntitiesError.  # noqa: E501

        Error text.  # noqa: E501

        :return: The error_text of this TpoSharedEntitiesError.  # noqa: E501
        :rtype: str
        """
        return self._error_text

    @error_text.setter
    def error_text(self, error_text):
        """Sets the error_text of this TpoSharedEntitiesError.

        Error text.  # noqa: E501

        :param error_text: The error_text of this TpoSharedEntitiesError.  # noqa: E501
        :type: str
        """

        self._error_text = error_text

    @property
    def object_name(self):
        """Gets the object_name of this TpoSharedEntitiesError.  # noqa: E501

        Property name  # noqa: E501

        :return: The object_name of this TpoSharedEntitiesError.  # noqa: E501
        :rtype: str
        """
        return self._object_name

    @object_name.setter
    def object_name(self, object_name):
        """Sets the object_name of this TpoSharedEntitiesError.

        Property name  # noqa: E501

        :param object_name: The object_name of this TpoSharedEntitiesError.  # noqa: E501
        :type: str
        """

        self._object_name = object_name

    @property
    def transaction(self):
        """Gets the transaction of this TpoSharedEntitiesError.  # noqa: E501

        Transaction.  # noqa: E501

        :return: The transaction of this TpoSharedEntitiesError.  # noqa: E501
        :rtype: str
        """
        return self._transaction

    @transaction.setter
    def transaction(self, transaction):
        """Sets the transaction of this TpoSharedEntitiesError.

        Transaction.  # noqa: E501

        :param transaction: The transaction of this TpoSharedEntitiesError.  # noqa: E501
        :type: str
        """

        self._transaction = transaction

    @property
    def activity_code(self):
        """Gets the activity_code of this TpoSharedEntitiesError.  # noqa: E501

        Activity code.  # noqa: E501

        :return: The activity_code of this TpoSharedEntitiesError.  # noqa: E501
        :rtype: str
        """
        return self._activity_code

    @activity_code.setter
    def activity_code(self, activity_code):
        """Sets the activity_code of this TpoSharedEntitiesError.

        Activity code.  # noqa: E501

        :param activity_code: The activity_code of this TpoSharedEntitiesError.  # noqa: E501
        :type: str
        """

        self._activity_code = activity_code

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(TpoSharedEntitiesError, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, TpoSharedEntitiesError):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
